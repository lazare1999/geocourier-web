name: geo_couriers
description: geo_couriers

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: '>=2.12.0 <3.0.0'

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
#  intl: ^0.17.0
  dio: ^5.4.0
  mockito: ^5.0.12
  json_annotation: ^4.0.1
  english_words: ^4.0.0
  animations: ^2.0.3
  flutter_markdown: ^0.6.2
  google_maps_flutter: ^2.1.5
  google_maps_flutter_web: ^0.5.4+2
  permission_handler: ^11.1.0
  sqflite: ^2.0.0+3
  path_provider: ^2.0.2
  shared_preferences: ^2.0.6
  url_launcher: ^6.0.9
  email_validator: ^2.0.1
  geolocator: ^10.1.0
  argon_buttons_flutter: ^1.1.0
  geocoding: ^2.0.0
  google_place: ^0.4.7
  google_maps_webservice: ^0.0.20-nullsafety.5
  infinite_scroll_pagination: ^4.0.0
  geodesy: ^0.10.2
  flutter_dotenv: ^5.0.0
#  map_launcher: ^2.1.1
  flutter_svg: ^2.0.9
  circular_menu: ^2.0.0
  awesome_notifications: ^0.8.2
  country_code_picker: ^3.0.0
  firebase_core: ^1.7.0
  geoflutterfire: ^3.0.1
  cloud_firestore: ^3.1.9
#  background_location: ^0.8.1
  fluttertoast: ^8.0.8
  flutter_switch: ^0.3.2
  flutter_credit_card: ^4.0.1
  firebase_messaging: ^13.1.0
  firebase_analytics: ^9.1.8
  fab_circular_menu: ^1.0.2
  accordion: ^2.5.1
  flutter_native_splash: ^2.2.4

  flutter_launcher_icons: ^0.13.1
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3

dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.0.6
  flutter_lints: ^3.0.1

flutter_icons:
  android: true
  ios: true
  image_path: "assets/icons/courier.png"

flutter_launcher_name:
  name: "კურიერი"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  generate: true
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
   - assets/icons/courier.png
   - assets/icons/courier_400.png
   - assets/images/youtube_text.png
   - assets/terms_and_conditions_ge.md
   - assets/terms_and_conditions_en.md
   - assets/images/box.png
   - assets/images/parcels/black/car.png
   - assets/images/parcels/black/car_express.png
   - assets/images/parcels/black/empty.png
   - assets/images/parcels/black/empty_express.png
   - assets/images/parcels/black/food.png
   - assets/images/parcels/black/food_express.png
   - assets/images/parcels/black/truck.png
   - assets/images/parcels/black/truck_express.png
   - assets/images/parcels/green/car.png
   - assets/images/parcels/green/car_express.png
   - assets/images/parcels/green/empty.png
   - assets/images/parcels/green/empty_express.png
   - assets/images/parcels/green/food.png
   - assets/images/parcels/green/food_express.png
   - assets/images/parcels/green/truck.png
   - assets/images/parcels/green/truck_express.png
   - assets/images/parcels/red/car.png
   - assets/images/parcels/red/car_express.png
   - assets/images/parcels/red/empty.png
   - assets/images/parcels/red/empty_express.png
   - assets/images/parcels/red/food.png
   - assets/images/parcels/red/food_express.png
   - assets/images/parcels/red/truck.png
   - assets/images/parcels/red/truck_express.png
   - assets/images/flags/rus.png
   - assets/images/flags/gb.png
   - assets/images/flags/ge.png
#   - .env
#     - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  fonts:
    - family:  CustomIcons
      fonts:
        - asset: fonts/CustomIcons.ttf

flutter_native_splash:

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#FF8D2F"
#  background_image: "assets/icons/courier.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/icons/courier_400.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. Currently, it is only supported for Android < v12 and iOS.
#  branding: assets/icons/courier_400.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#ee7600"
#  background_image_dark: "assets/dark-background.png"
  image_dark: assets/icons/courier_400.png
#  branding_dark: assets/icons/courier_400.png

  # Android 12 handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    image: assets/icons/courier_400.png

    # Splash screen background color.
    #color: "#42a5f5"

    # App icon background color.
    icon_background_color: "#FF8D2F"

    # The image_dark parameter and icon_background_color_dark set the image and icon background
    # color when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.
    image_dark: assets/icons/courier_400.png
    #color_dark: "#042a49"
    icon_background_color_dark: "#ee7600"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective image parameter.  You may specify all, selected, or none of these parameters:
  #image_andriod: assets/splash-andriod.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.png
  #image_dark_web: assets/splash-invert-web.png
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_andriod: assets/brand-android.png
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_dark_ios: assets/dart_dark-ios.png

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'